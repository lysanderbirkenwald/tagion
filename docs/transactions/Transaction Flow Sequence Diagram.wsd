@startuml Transaction Flow Sequence

skinparam Style strictuml
skinparam SequenceMessageAlign center
hide empty description
title Transaction Flow

actor user
participant tagionwallet as wallet
participant SecureWallet as secwallet
participant TransactionService as transerv
participant SmartScript as smartscript
participant DARTSyncService as dartsync
participant DART as dart
participant TagionService as tagion
participant HashGraph as hashgraph
participant TranscriptService as transcript
participant EpochDumpService as epochdump
participant RecorderService as recservice

activate transerv
activate dartsync
activate dart
activate tagion
activate transcript
activate epochdump
activate recservice

activate user
activate wallet

user -> wallet : -pay=invoice_file.hibon --send 

deactivate user 

activate secwallet

wallet -> secwallet : payment(invoice, ref signed_contract)

secwallet -> secwallet : check login
secwallet -> secwallet : check is enough amount
secwallet -> secwallet : sign signed_contract

deactivate secwallet

wallet -> wallet : create T from signed_contract

wallet -> transerv : send T in HiRPC

transerv -> dartsync : requestInputs
dartsync -> dart : **load_fingerprint?**
dartsync --> transerv : **recorder(fingerprint)?**

transerv -> transerv : collect bills from recorder\ninto PayContract

activate smartscript
transerv -> smartscript : check(net, signed_contract);
deactivate smartscript

transerv -> tagion : send signed_contract

transerv --> wallet : empty response

deactivate wallet

tagion -> tagion : count_transactions++
tagion -> tagion : add signed_contract \nto payload_queue

...

hashgraph -> tagion : receive_epoch(events)
tagion -> tagion : read payload_queue

tagion -> transcript : receive_epoch(payload)

transcript -> transcript : **some checks?**

transcript -> transcript : collect signed_contracts\ninto recorder

transcript -> dartsync : send recorder
dartsync -> dart : modify(recorder)
dart --> dartsync : send bullseye
dartsync --> transcript : send bullseye

transcript -> epochdump : send contracts & bullseye
epochdump -> epochdump : append epoch\nchan block

transcript -> recservice : send recorder & bullseye
recservice -> recservice : append recorder\nchain block

transcript -> transcript : current_epoch++

@enduml

@startuml Logger Subscription Sequence

skinparam Style strictuml
skinparam SequenceMessageAlign center
hide empty description
title Subscription to logs Sequence Diagram

participant subscriber as sub
participant SSLSocket as socket
participant SSLServiceAPI as api
participant LogSubscriptionService as subservice
participant LogSubscribersInfo as subinfo
participant LoggerService as logservice

subservice -> api : start
subservice -> subinfo : create empty
...
sub -> socket : create
sub -> socket : connect(InternetAddress)
socket -> api : SSL_connect
sub -> sub : create HiBON with LogFilters
sub -> socket : send(data : serialized HiBON filters)
socket -> api : SSL_write(data)
api -> subservice : receive(data)
subservice -> subinfo : addSubscription(subscriber_id, LogFilter[])
subinfo -> subinfo : updateLogServiceFilters
subinfo -> logservice : send(LogFilter[] : new added filters)
logservice -> logservice : save LogFilters

@enduml